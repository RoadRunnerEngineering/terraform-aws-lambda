name: Create Release Version

on:
  push:
    branches:
      - master

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: paulhatch/semantic-version@v5.0.2
        id: semantic-version
        with:
          # The prefix to use to identify tags
          tag_prefix: "v"
          # A string which, if present in a git commit, indicates that a change represents a
          # major (breaking) change, supports regular expressions wrapped with '/'
          major_pattern: "(MAJOR)"
          # Same as above except indicating a minor change, supports regular expressions wrapped with '/'
          minor_pattern: "(MINOR)"
          # A string to determine the format of the version output
          version_format: "${major}.${minor}.${patch}"
          # If this is set to true, *every* commit will be treated as a new version.
          # Otherwise, only commits with diffs will be treated as a new version.
          bump_each_commit: false
          # If true, the body of commits will also be searched for major/minor patterns to determine the version type.
          search_commit_body: true
      - name: Tag & Release
        id: release-tag
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          # Create tag for release.
          git tag ${{steps.semantic-version.outputs.version_tag }}
          git push origin ${{steps.semantic-version.outputs.version_tag }}

          # Create release from tag.
          gh release create ${{steps.semantic-version.outputs.version_tag }} --generate-notes
